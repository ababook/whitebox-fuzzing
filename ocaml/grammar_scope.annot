"grammar_scope.ml" 8 201 205 "grammar_scope.ml" 8 201 215
type(
  bool ref
)
ident(
  def strip_nums "grammar_scope.ml" 10 229 229 --
)
"grammar_scope.ml" 8 201 218 "grammar_scope.ml" 8 201 221
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"grammar_scope.ml" 8 201 222 "grammar_scope.ml" 8 201 227
type(
  bool
)
"grammar_scope.ml" 8 201 218 "grammar_scope.ml" 8 201 227
type(
  bool ref
)
"grammar_scope.ml" 10 229 233 "grammar_scope.ml" 10 229 241
type(
  string -> string
)
ident(
  def stripnum "grammar_scope.ml" 18 381 381 --
)
"grammar_scope.ml" 11 244 250 "grammar_scope.ml" 11 244 259
type(
  string -> string
)
"grammar_scope.ml" 11 244 262 "grammar_scope.ml" 11 244 279
type(
  Str.regexp -> string -> string -> string
)
ident(
  ext_ref Str.replace_first
)
"grammar_scope.ml" 11 244 281 "grammar_scope.ml" 11 244 291
type(
  string -> Str.regexp
)
ident(
  ext_ref Str.regexp
)
"grammar_scope.ml" 11 244 292 "grammar_scope.ml" 11 244 302
type(
  string
)
"grammar_scope.ml" 11 244 280 "grammar_scope.ml" 11 244 303
call(
  stack
)
type(
  Str.regexp
)
"grammar_scope.ml" 11 244 304 "grammar_scope.ml" 11 244 306
type(
  string
)
"grammar_scope.ml" 11 244 262 "grammar_scope.ml" 11 244 306
call(
  stack
)
type(
  string -> string
)
"grammar_scope.ml" 12 310 316 "grammar_scope.ml" 12 310 317
type(
  string
)
ident(
  def x "grammar_scope.ml" 13 321 325 "grammar_scope.ml" 16 372 379
)
"grammar_scope.ml" 13 321 328 "grammar_scope.ml" 13 321 329
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"grammar_scope.ml" 13 321 329 "grammar_scope.ml" 13 321 339
type(
  bool ref
)
ident(
  int_ref strip_nums "grammar_scope.ml" 8 201 205 "grammar_scope.ml" 8 201 215
)
"grammar_scope.ml" 13 321 328 "grammar_scope.ml" 13 321 339
type(
  bool
)
"grammar_scope.ml" 14 345 351 "grammar_scope.ml" 14 345 360
type(
  string -> string
)
ident(
  int_ref stripnum1 "grammar_scope.ml" 11 244 250 "grammar_scope.ml" 11 244 259
)
"grammar_scope.ml" 14 345 361 "grammar_scope.ml" 14 345 362
type(
  string
)
ident(
  int_ref x "grammar_scope.ml" 12 310 316 "grammar_scope.ml" 12 310 317
)
"grammar_scope.ml" 14 345 351 "grammar_scope.ml" 14 345 362
call(
  tail
)
type(
  string
)
"grammar_scope.ml" 16 372 378 "grammar_scope.ml" 16 372 379
type(
  string
)
ident(
  int_ref x "grammar_scope.ml" 12 310 316 "grammar_scope.ml" 12 310 317
)
"grammar_scope.ml" 13 321 325 "grammar_scope.ml" 16 372 379
type(
  string
)
"grammar_scope.ml" 12 310 312 "grammar_scope.ml" 16 372 379
type(
  string -> string
)
"grammar_scope.ml" 11 244 246 "grammar_scope.ml" 16 372 379
type(
  string -> string
)
"grammar_scope.ml" 18 381 385 "grammar_scope.ml" 18 381 388
type(
  string -> 'a
)
ident(
  def err "grammar_scope.ml" 23 473 473 --
)
"grammar_scope.ml" 18 381 389 "grammar_scope.ml" 18 381 390
type(
  string
)
ident(
  def s "grammar_scope.ml" 19 393 395 "grammar_scope.ml" 20 412 437
)
"grammar_scope.ml" 19 393 395 "grammar_scope.ml" 19 393 408
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"grammar_scope.ml" 19 393 409 "grammar_scope.ml" 19 393 410
type(
  string
)
ident(
  int_ref s "grammar_scope.ml" 18 381 389 "grammar_scope.ml" 18 381 390
)
"grammar_scope.ml" 19 393 395 "grammar_scope.ml" 19 393 410
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 20 412 414 "grammar_scope.ml" 20 412 422
type(
  string -> 'a
)
ident(
  ext_ref Pervasives.failwith
)
"grammar_scope.ml" 20 412 424 "grammar_scope.ml" 20 412 434
type(
  string
)
"grammar_scope.ml" 20 412 434 "grammar_scope.ml" 20 412 435
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 20 412 435 "grammar_scope.ml" 20 412 436
type(
  string
)
ident(
  int_ref s "grammar_scope.ml" 18 381 389 "grammar_scope.ml" 18 381 390
)
"grammar_scope.ml" 20 412 423 "grammar_scope.ml" 20 412 437
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 20 412 414 "grammar_scope.ml" 20 412 437
call(
  tail
)
type(
  'a
)
"grammar_scope.ml" 19 393 395 "grammar_scope.ml" 20 412 437
type(
  'a
)
"grammar_scope.ml" 26 550 556 "grammar_scope.ml" 26 550 562
type(
  Var.t list -> (string, Var.t) Hashtbl.t * 'a Stack.t
)
ident(
  def create "grammar_scope.ml" 33 852 854 "grammar_scope.ml" 69 1794 1797
)
"grammar_scope.ml" 26 550 563 "grammar_scope.ml" 26 550 568
type(
  Var.t list
)
ident(
  def decls "grammar_scope.ml" 27 571 575 "grammar_scope.ml" 31 826 850
)
"grammar_scope.ml" 27 571 579 "grammar_scope.ml" 27 571 580
type(
  (string, Var.t) Hashtbl.t
)
"grammar_scope.ml" 27 571 583 "grammar_scope.ml" 27 571 597
type(
  int -> (string, Var.t) Hashtbl.t
)
ident(
  ext_ref Hashtbl.create
)
"grammar_scope.ml" 27 571 598 "grammar_scope.ml" 27 571 602
type(
  int
)
"grammar_scope.ml" 27 571 583 "grammar_scope.ml" 27 571 602
call(
  stack
)
type(
  (string, Var.t) Hashtbl.t
)
"grammar_scope.ml" 28 606 610 "grammar_scope.ml" 28 606 619
type(
  (Var.t -> unit) -> Var.t list -> unit
)
ident(
  ext_ref List.iter
)
"grammar_scope.ml" 28 606 625 "grammar_scope.ml" 28 606 626
type(
  Var.t
)
ident(
  def v "grammar_scope.ml" 29 630 636 "grammar_scope.ml" 30 783 817
)
"grammar_scope.ml" 29 630 639 "grammar_scope.ml" 29 630 650
type(
  (string, Var.t) Hashtbl.t -> string -> bool
)
ident(
  ext_ref Hashtbl.mem
)
"grammar_scope.ml" 29 630 651 "grammar_scope.ml" 29 630 652
type(
  (string, Var.t) Hashtbl.t
)
ident(
  int_ref h "grammar_scope.ml" 27 571 579 "grammar_scope.ml" 27 571 580
)
"grammar_scope.ml" 29 630 654 "grammar_scope.ml" 29 630 662
type(
  Var.t -> string
)
ident(
  ext_ref Var.name
)
"grammar_scope.ml" 29 630 663 "grammar_scope.ml" 29 630 664
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 28 606 625 "grammar_scope.ml" 28 606 626
)
"grammar_scope.ml" 29 630 653 "grammar_scope.ml" 29 630 665
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 29 630 639 "grammar_scope.ml" 29 630 665
call(
  stack
)
type(
  bool
)
"grammar_scope.ml" 29 630 671 "grammar_scope.ml" 29 630 679
type(
  string -> unit
)
ident(
  ext_ref Pervasives.failwith
)
"grammar_scope.ml" 29 630 681 "grammar_scope.ml" 29 630 695
type(
  (string -> string, unit, string) format -> string -> string
)
ident(
  ext_ref Printf.sprintf
)
"grammar_scope.ml" 29 630 696 "grammar_scope.ml" 29 630 767
type(
  (string -> string, unit, string) format
)
"grammar_scope.ml" 29 630 769 "grammar_scope.ml" 29 630 777
type(
  Var.t -> string
)
ident(
  ext_ref Var.name
)
"grammar_scope.ml" 29 630 778 "grammar_scope.ml" 29 630 779
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 28 606 625 "grammar_scope.ml" 28 606 626
)
"grammar_scope.ml" 29 630 768 "grammar_scope.ml" 29 630 780
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 29 630 680 "grammar_scope.ml" 29 630 781
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 29 630 671 "grammar_scope.ml" 29 630 781
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 29 630 636 "grammar_scope.ml" 29 630 781
type(
  unit
)
"grammar_scope.ml" 30 783 789 "grammar_scope.ml" 30 783 800
type(
  (string, Var.t) Hashtbl.t -> string -> Var.t -> unit
)
ident(
  ext_ref Hashtbl.add
)
"grammar_scope.ml" 30 783 801 "grammar_scope.ml" 30 783 802
type(
  (string, Var.t) Hashtbl.t
)
ident(
  int_ref h "grammar_scope.ml" 27 571 579 "grammar_scope.ml" 27 571 580
)
"grammar_scope.ml" 30 783 804 "grammar_scope.ml" 30 783 812
type(
  Var.t -> string
)
ident(
  ext_ref Var.name
)
"grammar_scope.ml" 30 783 813 "grammar_scope.ml" 30 783 814
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 28 606 625 "grammar_scope.ml" 28 606 626
)
"grammar_scope.ml" 30 783 803 "grammar_scope.ml" 30 783 815
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 30 783 816 "grammar_scope.ml" 30 783 817
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 28 606 625 "grammar_scope.ml" 28 606 626
)
"grammar_scope.ml" 30 783 789 "grammar_scope.ml" 30 783 817
call(
  tail
)
type(
  unit
)
"grammar_scope.ml" 29 630 636 "grammar_scope.ml" 30 783 817
type(
  unit
)
"grammar_scope.ml" 28 606 620 "grammar_scope.ml" 30 783 818
type(
  Var.t -> unit
)
"grammar_scope.ml" 30 783 819 "grammar_scope.ml" 30 783 824
type(
  Var.t list
)
ident(
  int_ref decls "grammar_scope.ml" 26 550 563 "grammar_scope.ml" 26 550 568
)
"grammar_scope.ml" 28 606 610 "grammar_scope.ml" 30 783 824
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 31 826 831 "grammar_scope.ml" 31 826 832
type(
  (string, Var.t) Hashtbl.t
)
ident(
  int_ref h "grammar_scope.ml" 27 571 579 "grammar_scope.ml" 27 571 580
)
"grammar_scope.ml" 31 826 834 "grammar_scope.ml" 31 826 846
type(
  unit -> 'a Stack.t
)
ident(
  ext_ref Stack.create
)
"grammar_scope.ml" 31 826 846 "grammar_scope.ml" 31 826 848
type(
  unit
)
"grammar_scope.ml" 31 826 834 "grammar_scope.ml" 31 826 848
call(
  stack
)
type(
  'a Stack.t
)
"grammar_scope.ml" 31 826 830 "grammar_scope.ml" 31 826 850
type(
  (string, Var.t) Hashtbl.t * 'a Stack.t
)
"grammar_scope.ml" 28 606 610 "grammar_scope.ml" 31 826 850
type(
  (string, Var.t) Hashtbl.t * 'a Stack.t
)
"grammar_scope.ml" 27 571 575 "grammar_scope.ml" 31 826 850
type(
  (string, Var.t) Hashtbl.t * 'a Stack.t
)
"grammar_scope.ml" 33 852 858 "grammar_scope.ml" 33 852 869
type(
  unit -> t
)
ident(
  def empty_scope "grammar_scope.ml" 35 890 892 "grammar_scope.ml" 69 1794 1797
)
"grammar_scope.ml" 33 852 870 "grammar_scope.ml" 33 852 872
type(
  unit
)
"grammar_scope.ml" 33 852 879 "grammar_scope.ml" 33 852 885
type(
  Var.t list -> t
)
ident(
  int_ref create "grammar_scope.ml" 26 550 556 "grammar_scope.ml" 26 550 562
)
"grammar_scope.ml" 33 852 886 "grammar_scope.ml" 33 852 888
type(
  Var.t list
)
"grammar_scope.ml" 33 852 879 "grammar_scope.ml" 33 852 888
call(
  tail
)
type(
  t
)
type(
  t
)
"grammar_scope.ml" 35 890 896 "grammar_scope.ml" 35 890 903
type(
  ('b, 'c) Hashtbl.t * 'd -> 'b -> 'c -> 'c
)
ident(
  def add_var "grammar_scope.ml" 39 956 958 "grammar_scope.ml" 69 1794 1797
)
"grammar_scope.ml" 35 890 904 "grammar_scope.ml" 35 890 909
type(
  ('b, 'c) Hashtbl.t * 'd
)
ident(
  def scope "grammar_scope.ml" 35 890 910 "grammar_scope.ml" 37 949 954
)
"grammar_scope.ml" 35 890 910 "grammar_scope.ml" 35 890 911
type(
  'b
)
ident(
  def n "grammar_scope.ml" 35 890 912 "grammar_scope.ml" 37 949 954
)
"grammar_scope.ml" 35 890 912 "grammar_scope.ml" 35 890 913
type(
  'c
)
ident(
  def v "grammar_scope.ml" 36 916 920 "grammar_scope.ml" 37 949 954
)
"grammar_scope.ml" 36 916 920 "grammar_scope.ml" 36 916 931
type(
  ('b, 'c) Hashtbl.t -> 'b -> 'c -> unit
)
ident(
  ext_ref Hashtbl.add
)
"grammar_scope.ml" 36 916 933 "grammar_scope.ml" 36 916 936
type(
  ('b, 'c) Hashtbl.t * 'd -> ('b, 'c) Hashtbl.t
)
ident(
  ext_ref Pervasives.fst
)
"grammar_scope.ml" 36 916 937 "grammar_scope.ml" 36 916 942
type(
  ('b, 'c) Hashtbl.t * 'd
)
ident(
  int_ref scope "grammar_scope.ml" 35 890 904 "grammar_scope.ml" 35 890 909
)
"grammar_scope.ml" 36 916 932 "grammar_scope.ml" 36 916 943
type(
  ('b, 'c) Hashtbl.t
)
"grammar_scope.ml" 36 916 944 "grammar_scope.ml" 36 916 945
type(
  'b
)
ident(
  int_ref n "grammar_scope.ml" 35 890 910 "grammar_scope.ml" 35 890 911
)
"grammar_scope.ml" 36 916 946 "grammar_scope.ml" 36 916 947
type(
  'c
)
ident(
  int_ref v "grammar_scope.ml" 35 890 912 "grammar_scope.ml" 35 890 913
)
"grammar_scope.ml" 36 916 920 "grammar_scope.ml" 36 916 947
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 37 949 953 "grammar_scope.ml" 37 949 954
type(
  'c
)
ident(
  int_ref v "grammar_scope.ml" 35 890 912 "grammar_scope.ml" 35 890 913
)
"grammar_scope.ml" 36 916 920 "grammar_scope.ml" 37 949 954
type(
  'c
)
"grammar_scope.ml" 39 956 962 "grammar_scope.ml" 39 956 965
type(
  (string, Var.t) Hashtbl.t * 'e -> string -> Type.typ -> Var.t
)
ident(
  def add "grammar_scope.ml" 43 1042 1044 "grammar_scope.ml" 69 1794 1797
)
"grammar_scope.ml" 39 956 966 "grammar_scope.ml" 39 956 971
type(
  (string, Var.t) Hashtbl.t * 'e
)
ident(
  def scope "grammar_scope.ml" 39 956 972 "grammar_scope.ml" 41 1019 1040
)
"grammar_scope.ml" 39 956 972 "grammar_scope.ml" 39 956 973
type(
  string
)
ident(
  def n "grammar_scope.ml" 39 956 974 "grammar_scope.ml" 41 1019 1040
)
"grammar_scope.ml" 39 956 974 "grammar_scope.ml" 39 956 975
type(
  Type.typ
)
ident(
  def t "grammar_scope.ml" 40 978 982 "grammar_scope.ml" 41 1019 1040
)
"grammar_scope.ml" 40 978 986 "grammar_scope.ml" 40 978 987
type(
  Var.t
)
"grammar_scope.ml" 40 978 990 "grammar_scope.ml" 40 978 1000
type(
  string -> Type.typ -> Var.t
)
ident(
  ext_ref Var.newvar
)
"grammar_scope.ml" 40 978 1002 "grammar_scope.ml" 40 978 1010
type(
  string -> string
)
ident(
  int_ref stripnum "grammar_scope.ml" 10 229 233 "grammar_scope.ml" 10 229 241
)
"grammar_scope.ml" 40 978 1011 "grammar_scope.ml" 40 978 1012
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 39 956 972 "grammar_scope.ml" 39 956 973
)
"grammar_scope.ml" 40 978 1001 "grammar_scope.ml" 40 978 1013
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 40 978 1014 "grammar_scope.ml" 40 978 1015
type(
  Type.typ
)
ident(
  int_ref t "grammar_scope.ml" 39 956 974 "grammar_scope.ml" 39 956 975
)
"grammar_scope.ml" 40 978 990 "grammar_scope.ml" 40 978 1015
call(
  stack
)
type(
  Var.t
)
"grammar_scope.ml" 41 1019 1023 "grammar_scope.ml" 41 1019 1030
type(
  (string, Var.t) Hashtbl.t * 'e -> string -> Var.t -> Var.t
)
ident(
  int_ref add_var "grammar_scope.ml" 35 890 896 "grammar_scope.ml" 35 890 903
)
"grammar_scope.ml" 41 1019 1031 "grammar_scope.ml" 41 1019 1036
type(
  (string, Var.t) Hashtbl.t * 'e
)
ident(
  int_ref scope "grammar_scope.ml" 39 956 966 "grammar_scope.ml" 39 956 971
)
"grammar_scope.ml" 41 1019 1037 "grammar_scope.ml" 41 1019 1038
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 39 956 972 "grammar_scope.ml" 39 956 973
)
"grammar_scope.ml" 41 1019 1039 "grammar_scope.ml" 41 1019 1040
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 40 978 986 "grammar_scope.ml" 40 978 987
)
"grammar_scope.ml" 41 1019 1023 "grammar_scope.ml" 41 1019 1040
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 40 978 982 "grammar_scope.ml" 41 1019 1040
type(
  Var.t
)
"grammar_scope.ml" 43 1042 1048 "grammar_scope.ml" 43 1042 1056
type(
  (string, Var.t) Hashtbl.t * string Stack.t -> string -> Type.typ -> Var.t
)
ident(
  def add_push "grammar_scope.ml" 47 1118 1120 "grammar_scope.ml" 69 1794 1797
)
"grammar_scope.ml" 43 1042 1057 "grammar_scope.ml" 43 1042 1062
type(
  (string, Var.t) Hashtbl.t * string Stack.t
)
ident(
  def scope "grammar_scope.ml" 43 1042 1063 "grammar_scope.ml" 45 1099 1116
)
"grammar_scope.ml" 43 1042 1063 "grammar_scope.ml" 43 1042 1064
type(
  string
)
ident(
  def n "grammar_scope.ml" 43 1042 1065 "grammar_scope.ml" 45 1099 1116
)
"grammar_scope.ml" 43 1042 1065 "grammar_scope.ml" 43 1042 1066
type(
  Type.typ
)
ident(
  def t "grammar_scope.ml" 44 1069 1073 "grammar_scope.ml" 45 1099 1116
)
"grammar_scope.ml" 44 1069 1073 "grammar_scope.ml" 44 1069 1083
type(
  string -> string Stack.t -> unit
)
ident(
  ext_ref Stack.push
)
"grammar_scope.ml" 44 1069 1084 "grammar_scope.ml" 44 1069 1085
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 43 1042 1063 "grammar_scope.ml" 43 1042 1064
)
"grammar_scope.ml" 44 1069 1087 "grammar_scope.ml" 44 1069 1090
type(
  (string, Var.t) Hashtbl.t * string Stack.t -> string Stack.t
)
ident(
  ext_ref Pervasives.snd
)
"grammar_scope.ml" 44 1069 1091 "grammar_scope.ml" 44 1069 1096
type(
  (string, Var.t) Hashtbl.t * string Stack.t
)
ident(
  int_ref scope "grammar_scope.ml" 43 1042 1057 "grammar_scope.ml" 43 1042 1062
)
"grammar_scope.ml" 44 1069 1086 "grammar_scope.ml" 44 1069 1097
type(
  string Stack.t
)
"grammar_scope.ml" 44 1069 1073 "grammar_scope.ml" 44 1069 1097
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 45 1099 1103 "grammar_scope.ml" 45 1099 1106
type(
  (string, Var.t) Hashtbl.t * string Stack.t -> string -> Type.typ -> Var.t
)
ident(
  int_ref add "grammar_scope.ml" 39 956 962 "grammar_scope.ml" 39 956 965
)
"grammar_scope.ml" 45 1099 1107 "grammar_scope.ml" 45 1099 1112
type(
  (string, Var.t) Hashtbl.t * string Stack.t
)
ident(
  int_ref scope "grammar_scope.ml" 43 1042 1057 "grammar_scope.ml" 43 1042 1062
)
"grammar_scope.ml" 45 1099 1113 "grammar_scope.ml" 45 1099 1114
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 43 1042 1063 "grammar_scope.ml" 43 1042 1064
)
"grammar_scope.ml" 45 1099 1115 "grammar_scope.ml" 45 1099 1116
type(
  Type.typ
)
ident(
  int_ref t "grammar_scope.ml" 43 1042 1065 "grammar_scope.ml" 43 1042 1066
)
"grammar_scope.ml" 45 1099 1103 "grammar_scope.ml" 45 1099 1116
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 44 1069 1073 "grammar_scope.ml" 45 1099 1116
type(
  Var.t
)
"grammar_scope.ml" 47 1118 1124 "grammar_scope.ml" 47 1118 1127
type(
  ('f, 'g) Hashtbl.t * 'f Stack.t -> unit
)
ident(
  def pop "grammar_scope.ml" 53 1270 1272 "grammar_scope.ml" 69 1794 1797
)
"grammar_scope.ml" 47 1118 1128 "grammar_scope.ml" 47 1118 1133
type(
  ('f, 'g) Hashtbl.t * 'f Stack.t
)
ident(
  def scope "grammar_scope.ml" 48 1136 1140 "grammar_scope.ml" 50 1188 1210
)
"grammar_scope.ml" 48 1136 1145 "grammar_scope.ml" 48 1136 1146
type(
  ('f, 'g) Hashtbl.t
)
"grammar_scope.ml" 48 1136 1147 "grammar_scope.ml" 48 1136 1148
type(
  'f Stack.t
)
"grammar_scope.ml" 48 1136 1144 "grammar_scope.ml" 48 1136 1149
type(
  ('f, 'g) Hashtbl.t * 'f Stack.t
)
"grammar_scope.ml" 48 1136 1152 "grammar_scope.ml" 48 1136 1157
type(
  ('f, 'g) Hashtbl.t * 'f Stack.t
)
ident(
  int_ref scope "grammar_scope.ml" 47 1118 1128 "grammar_scope.ml" 47 1118 1133
)
"grammar_scope.ml" 49 1161 1169 "grammar_scope.ml" 49 1161 1170
type(
  'f
)
"grammar_scope.ml" 49 1161 1173 "grammar_scope.ml" 49 1161 1182
type(
  'f Stack.t -> 'f
)
ident(
  ext_ref Stack.pop
)
"grammar_scope.ml" 49 1161 1183 "grammar_scope.ml" 49 1161 1184
type(
  'f Stack.t
)
ident(
  int_ref s "grammar_scope.ml" 48 1136 1147 "grammar_scope.ml" 48 1136 1148
)
"grammar_scope.ml" 49 1161 1173 "grammar_scope.ml" 49 1161 1184
call(
  stack
)
type(
  'f
)
"grammar_scope.ml" 50 1188 1192 "grammar_scope.ml" 50 1188 1206
type(
  ('f, 'g) Hashtbl.t -> 'f -> unit
)
ident(
  ext_ref Hashtbl.remove
)
"grammar_scope.ml" 50 1188 1207 "grammar_scope.ml" 50 1188 1208
type(
  ('f, 'g) Hashtbl.t
)
ident(
  int_ref h "grammar_scope.ml" 48 1136 1145 "grammar_scope.ml" 48 1136 1146
)
"grammar_scope.ml" 50 1188 1209 "grammar_scope.ml" 50 1188 1210
type(
  'f
)
ident(
  int_ref n "grammar_scope.ml" 49 1161 1169 "grammar_scope.ml" 49 1161 1170
)
"grammar_scope.ml" 50 1188 1192 "grammar_scope.ml" 50 1188 1210
call(
  tail
)
type(
  unit
)
"grammar_scope.ml" 49 1161 1165 "grammar_scope.ml" 50 1188 1210
type(
  unit
)
"grammar_scope.ml" 48 1136 1140 "grammar_scope.ml" 50 1188 1210
type(
  unit
)
"grammar_scope.ml" 53 1270 1276 "grammar_scope.ml" 53 1270 1295
type(
  (string, Var.t) Hashtbl.t * 'h -> string -> Type.typ option -> Var.t
)
ident(
  def get_lval_if_defined "grammar_scope.ml" 60 1563 1565 "grammar_scope.ml" 69 1794 1797
)
"grammar_scope.ml" 53 1270 1296 "grammar_scope.ml" 53 1270 1301
type(
  (string, Var.t) Hashtbl.t * 'h
)
ident(
  def scope "grammar_scope.ml" 53 1270 1302 "grammar_scope.ml" 58 1426 1561
)
"grammar_scope.ml" 53 1270 1302 "grammar_scope.ml" 53 1270 1303
type(
  string
)
ident(
  def n "grammar_scope.ml" 53 1270 1304 "grammar_scope.ml" 58 1426 1561
)
"grammar_scope.ml" 53 1270 1304 "grammar_scope.ml" 53 1270 1305
type(
  Type.typ option
)
ident(
  def t "grammar_scope.ml" 54 1308 1312 "grammar_scope.ml" 58 1426 1561
)
"grammar_scope.ml" 54 1308 1316 "grammar_scope.ml" 54 1308 1317
type(
  string
)
"grammar_scope.ml" 54 1308 1320 "grammar_scope.ml" 54 1308 1328
type(
  string -> string
)
ident(
  int_ref stripnum "grammar_scope.ml" 10 229 233 "grammar_scope.ml" 10 229 241
)
"grammar_scope.ml" 54 1308 1329 "grammar_scope.ml" 54 1308 1330
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 53 1270 1302 "grammar_scope.ml" 53 1270 1303
)
"grammar_scope.ml" 54 1308 1320 "grammar_scope.ml" 54 1308 1330
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 55 1334 1342 "grammar_scope.ml" 55 1334 1343
type(
  Var.t
)
"grammar_scope.ml" 55 1334 1346 "grammar_scope.ml" 55 1334 1358
type(
  (string, Var.t) Hashtbl.t -> string -> Var.t
)
ident(
  ext_ref Hashtbl.find
)
"grammar_scope.ml" 55 1334 1360 "grammar_scope.ml" 55 1334 1363
type(
  (string, Var.t) Hashtbl.t * 'h -> (string, Var.t) Hashtbl.t
)
ident(
  ext_ref Pervasives.fst
)
"grammar_scope.ml" 55 1334 1364 "grammar_scope.ml" 55 1334 1369
type(
  (string, Var.t) Hashtbl.t * 'h
)
ident(
  int_ref scope "grammar_scope.ml" 53 1270 1296 "grammar_scope.ml" 53 1270 1301
)
"grammar_scope.ml" 55 1334 1359 "grammar_scope.ml" 55 1334 1370
type(
  (string, Var.t) Hashtbl.t
)
"grammar_scope.ml" 55 1334 1371 "grammar_scope.ml" 55 1334 1372
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 54 1308 1316 "grammar_scope.ml" 54 1308 1317
)
"grammar_scope.ml" 55 1334 1346 "grammar_scope.ml" 55 1334 1372
call(
  stack
)
type(
  Var.t
)
"grammar_scope.ml" 56 1376 1383 "grammar_scope.ml" 56 1376 1384
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 53 1270 1304 "grammar_scope.ml" 53 1270 1305
)
"grammar_scope.ml" 56 1376 1385 "grammar_scope.ml" 56 1376 1386
type(
  Type.typ option -> Type.typ option -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"grammar_scope.ml" 56 1376 1387 "grammar_scope.ml" 56 1376 1391
type(
  Type.typ option
)
"grammar_scope.ml" 56 1376 1383 "grammar_scope.ml" 56 1376 1391
type(
  bool
)
"grammar_scope.ml" 56 1376 1392 "grammar_scope.ml" 56 1376 1394
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"grammar_scope.ml" 56 1376 1395 "grammar_scope.ml" 56 1376 1396
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 53 1270 1304 "grammar_scope.ml" 53 1270 1305
)
"grammar_scope.ml" 56 1376 1397 "grammar_scope.ml" 56 1376 1398
type(
  Type.typ option -> Type.typ option -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"grammar_scope.ml" 56 1376 1404 "grammar_scope.ml" 56 1376 1411
type(
  Var.t -> Type.typ
)
ident(
  ext_ref Var.typ
)
"grammar_scope.ml" 56 1376 1412 "grammar_scope.ml" 56 1376 1413
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 55 1334 1342 "grammar_scope.ml" 55 1334 1343
)
"grammar_scope.ml" 56 1376 1403 "grammar_scope.ml" 56 1376 1414
call(
  stack
)
type(
  Type.typ
)
"grammar_scope.ml" 56 1376 1399 "grammar_scope.ml" 56 1376 1414
type(
  Type.typ option
)
"grammar_scope.ml" 56 1376 1395 "grammar_scope.ml" 56 1376 1414
type(
  bool
)
"grammar_scope.ml" 56 1376 1383 "grammar_scope.ml" 56 1376 1414
type(
  bool
)
"grammar_scope.ml" 57 1415 1424 "grammar_scope.ml" 57 1415 1425
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 55 1334 1342 "grammar_scope.ml" 55 1334 1343
)
"grammar_scope.ml" 58 1426 1435 "grammar_scope.ml" 58 1426 1438
type(
  string -> Var.t
)
ident(
  int_ref err "grammar_scope.ml" 18 381 385 "grammar_scope.ml" 18 381 388
)
"grammar_scope.ml" 58 1426 1440 "grammar_scope.ml" 58 1426 1452
type(
  string
)
"grammar_scope.ml" 58 1426 1452 "grammar_scope.ml" 58 1426 1453
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 58 1426 1453 "grammar_scope.ml" 58 1426 1454
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 54 1308 1316 "grammar_scope.ml" 54 1308 1317
)
"grammar_scope.ml" 58 1426 1454 "grammar_scope.ml" 58 1426 1455
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 58 1426 1455 "grammar_scope.ml" 58 1426 1488
type(
  string
)
"grammar_scope.ml" 58 1426 1488 "grammar_scope.ml" 58 1426 1489
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 58 1426 1490 "grammar_scope.ml" 58 1426 1506
type(
  Type.typ -> string
)
ident(
  ext_ref Pp.typ_to_string
)
"grammar_scope.ml" 58 1426 1508 "grammar_scope.ml" 58 1426 1515
type(
  Var.t -> Type.typ
)
ident(
  ext_ref Var.typ
)
"grammar_scope.ml" 58 1426 1516 "grammar_scope.ml" 58 1426 1517
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 55 1334 1342 "grammar_scope.ml" 55 1334 1343
)
"grammar_scope.ml" 58 1426 1507 "grammar_scope.ml" 58 1426 1518
call(
  stack
)
type(
  Type.typ
)
"grammar_scope.ml" 58 1426 1489 "grammar_scope.ml" 58 1426 1519
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 58 1426 1519 "grammar_scope.ml" 58 1426 1520
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 58 1426 1520 "grammar_scope.ml" 58 1426 1523
type(
  string
)
"grammar_scope.ml" 58 1426 1523 "grammar_scope.ml" 58 1426 1524
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 58 1426 1525 "grammar_scope.ml" 58 1426 1541
type(
  Type.typ -> string
)
ident(
  ext_ref Pp.typ_to_string
)
"grammar_scope.ml" 58 1426 1543 "grammar_scope.ml" 58 1426 1556
type(
  Type.typ option -> Type.typ
)
ident(
  ext_ref BatOption.get
)
"grammar_scope.ml" 58 1426 1557 "grammar_scope.ml" 58 1426 1558
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 53 1270 1304 "grammar_scope.ml" 53 1270 1305
)
"grammar_scope.ml" 58 1426 1542 "grammar_scope.ml" 58 1426 1559
call(
  stack
)
type(
  Type.typ
)
"grammar_scope.ml" 58 1426 1524 "grammar_scope.ml" 58 1426 1560
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 58 1426 1520 "grammar_scope.ml" 58 1426 1560
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 58 1426 1489 "grammar_scope.ml" 58 1426 1560
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 58 1426 1455 "grammar_scope.ml" 58 1426 1560
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 58 1426 1453 "grammar_scope.ml" 58 1426 1560
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 58 1426 1439 "grammar_scope.ml" 58 1426 1561
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 58 1426 1435 "grammar_scope.ml" 58 1426 1561
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 56 1376 1380 "grammar_scope.ml" 58 1426 1561
type(
  Var.t
)
"grammar_scope.ml" 55 1334 1338 "grammar_scope.ml" 58 1426 1561
type(
  Var.t
)
"grammar_scope.ml" 54 1308 1312 "grammar_scope.ml" 58 1426 1561
type(
  Var.t
)
"grammar_scope.ml" 60 1563 1569 "grammar_scope.ml" 60 1563 1577
type(
  (string, Var.t) Hashtbl.t * 'i -> string -> Type.typ option -> Var.t
)
ident(
  def get_lval "grammar_scope.ml" 67 1733 1792 "grammar_scope.ml" 69 1794 1797
)
"grammar_scope.ml" 60 1563 1578 "grammar_scope.ml" 60 1563 1583
type(
  (string, Var.t) Hashtbl.t * 'i
)
ident(
  def scope "grammar_scope.ml" 60 1563 1584 "grammar_scope.ml" 67 1733 1792
)
"grammar_scope.ml" 60 1563 1584 "grammar_scope.ml" 60 1563 1585
type(
  string
)
ident(
  def n "grammar_scope.ml" 60 1563 1586 "grammar_scope.ml" 67 1733 1792
)
"grammar_scope.ml" 60 1563 1586 "grammar_scope.ml" 60 1563 1587
type(
  Type.typ option
)
ident(
  def t "grammar_scope.ml" 61 1590 1594 "grammar_scope.ml" 67 1733 1792
)
"grammar_scope.ml" 61 1590 1598 "grammar_scope.ml" 61 1590 1599
type(
  string
)
"grammar_scope.ml" 61 1590 1602 "grammar_scope.ml" 61 1590 1610
type(
  string -> string
)
ident(
  int_ref stripnum "grammar_scope.ml" 10 229 233 "grammar_scope.ml" 10 229 241
)
"grammar_scope.ml" 61 1590 1611 "grammar_scope.ml" 61 1590 1612
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 60 1563 1584 "grammar_scope.ml" 60 1563 1585
)
"grammar_scope.ml" 61 1590 1602 "grammar_scope.ml" 61 1590 1612
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 63 1624 1630 "grammar_scope.ml" 63 1624 1649
type(
  (string, Var.t) Hashtbl.t * 'i -> string -> Type.typ option -> Var.t
)
ident(
  int_ref get_lval_if_defined "grammar_scope.ml" 53 1270 1276 "grammar_scope.ml" 53 1270 1295
)
"grammar_scope.ml" 63 1624 1650 "grammar_scope.ml" 63 1624 1655
type(
  (string, Var.t) Hashtbl.t * 'i
)
ident(
  int_ref scope "grammar_scope.ml" 60 1563 1578 "grammar_scope.ml" 60 1563 1583
)
"grammar_scope.ml" 63 1624 1656 "grammar_scope.ml" 63 1624 1657
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 61 1590 1598 "grammar_scope.ml" 61 1590 1599
)
"grammar_scope.ml" 63 1624 1658 "grammar_scope.ml" 63 1624 1659
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 60 1563 1586 "grammar_scope.ml" 60 1563 1587
)
"grammar_scope.ml" 63 1624 1630 "grammar_scope.ml" 63 1624 1659
call(
  stack
)
type(
  Var.t
)
"grammar_scope.ml" 64 1660 1669 "grammar_scope.ml" 64 1660 1678
type(
  exn
)
"grammar_scope.ml" 65 1682 1694 "grammar_scope.ml" 65 1682 1695
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 60 1563 1586 "grammar_scope.ml" 60 1563 1587
)
"grammar_scope.ml" 66 1701 1714 "grammar_scope.ml" 66 1701 1715
type(
  Type.typ
)
ident(
  def t "grammar_scope.ml" 66 1701 1719 "grammar_scope.ml" 66 1701 1732
)
"grammar_scope.ml" 66 1701 1709 "grammar_scope.ml" 66 1701 1715
type(
  Type.typ option
)
"grammar_scope.ml" 66 1701 1719 "grammar_scope.ml" 66 1701 1722
type(
  (string, Var.t) Hashtbl.t * 'i -> string -> Type.typ -> Var.t
)
ident(
  int_ref add "grammar_scope.ml" 39 956 962 "grammar_scope.ml" 39 956 965
)
"grammar_scope.ml" 66 1701 1723 "grammar_scope.ml" 66 1701 1728
type(
  (string, Var.t) Hashtbl.t * 'i
)
ident(
  int_ref scope "grammar_scope.ml" 60 1563 1578 "grammar_scope.ml" 60 1563 1583
)
"grammar_scope.ml" 66 1701 1729 "grammar_scope.ml" 66 1701 1730
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 61 1590 1598 "grammar_scope.ml" 61 1590 1599
)
"grammar_scope.ml" 66 1701 1731 "grammar_scope.ml" 66 1701 1732
type(
  Type.typ
)
ident(
  int_ref t "grammar_scope.ml" 66 1701 1714 "grammar_scope.ml" 66 1701 1715
)
"grammar_scope.ml" 66 1701 1719 "grammar_scope.ml" 66 1701 1732
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 67 1733 1741 "grammar_scope.ml" 67 1733 1745
type(
  Type.typ option
)
"grammar_scope.ml" 67 1733 1749 "grammar_scope.ml" 67 1733 1752
type(
  string -> Var.t
)
ident(
  int_ref err "grammar_scope.ml" 18 381 385 "grammar_scope.ml" 18 381 388
)
"grammar_scope.ml" 67 1733 1754 "grammar_scope.ml" 67 1733 1785
type(
  string
)
"grammar_scope.ml" 67 1733 1785 "grammar_scope.ml" 67 1733 1786
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 67 1733 1786 "grammar_scope.ml" 67 1733 1787
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 61 1590 1598 "grammar_scope.ml" 61 1590 1599
)
"grammar_scope.ml" 67 1733 1787 "grammar_scope.ml" 67 1733 1788
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 67 1733 1788 "grammar_scope.ml" 67 1733 1791
type(
  string
)
"grammar_scope.ml" 67 1733 1786 "grammar_scope.ml" 67 1733 1791
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 67 1733 1753 "grammar_scope.ml" 67 1733 1792
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 67 1733 1749 "grammar_scope.ml" 67 1733 1792
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 65 1682 1688 "grammar_scope.ml" 67 1733 1792
type(
  Var.t
)
"grammar_scope.ml" 62 1616 1620 "grammar_scope.ml" 67 1733 1792
type(
  Var.t
)
"grammar_scope.ml" 61 1590 1594 "grammar_scope.ml" 67 1733 1792
type(
  Var.t
)
"grammar_scope.ml" 71 1799 1803 "grammar_scope.ml" 71 1799 1814
type(
  unit -> Scope.t
)
ident(
  def empty_scope "grammar_scope.ml" 72 1835 1835 --
)
"grammar_scope.ml" 71 1799 1817 "grammar_scope.ml" 71 1799 1834
type(
  unit -> Scope.t
)
ident(
  ext_ref Scope.empty_scope
)
"grammar_scope.ml" 72 1835 1839 "grammar_scope.ml" 72 1835 1862
type(
  Var.t list -> (string, Var.t) Hashtbl.t * 'a Stack.t
)
ident(
  def create_scope_from_decls "grammar_scope.ml" 72 1835 1889 --
)
"grammar_scope.ml" 72 1835 1863 "grammar_scope.ml" 72 1835 1868
type(
  Var.t list
)
ident(
  def decls "grammar_scope.ml" 72 1835 1871 "grammar_scope.ml" 72 1835 1889
)
"grammar_scope.ml" 72 1835 1871 "grammar_scope.ml" 72 1835 1883
type(
  Var.t list -> (string, Var.t) Hashtbl.t * 'a Stack.t
)
ident(
  ext_ref Scope.create
)
"grammar_scope.ml" 72 1835 1884 "grammar_scope.ml" 72 1835 1889
type(
  Var.t list
)
ident(
  int_ref decls "grammar_scope.ml" 72 1835 1863 "grammar_scope.ml" 72 1835 1868
)
"grammar_scope.ml" 72 1835 1871 "grammar_scope.ml" 72 1835 1889
call(
  tail
)
type(
  (string, Var.t) Hashtbl.t * 'a Stack.t
)
